@using Microsoft.AspNetCore.Components.Routing
@inject AuthService Auth
@inject NavigationManager Nav

<nav class="navbar navbar-dark bg-dark justify-content-around py-2">
    <NavLink class="nav-link text-white" href="" Match="NavLinkMatch.All">
        <i class="bi bi-house fs-4"></i>
    </NavLink>

    <NavLink class="nav-link text-white" href="blends">
        <i class="bi bi-basket fs-4"></i>
    </NavLink>

    <NavLink class="nav-link text-white" href="profile">
        <i class="bi bi-person-badge fs-4"></i>
    </NavLink>

    @if (isAdmin)
    {
        <NavLink class="nav-link text-white" href="users">
            <i class="bi bi-people fs-4"></i>
        </NavLink>
    }

    @if (loggedIn)
    {
        <button class="btn btn-outline-light btn-sm" @onclick="DoLogout">
            <i class="bi bi-box-arrow-right fs-5"></i>
        </button>
    }
    else
    {
        <NavLink class="btn btn-outline-light btn-sm" href="login">
            <i class="bi bi-person fs-5"></i>
        </NavLink>
    }
</nav>

@code {
    bool loggedIn;
    bool isAdmin;

    protected override async Task OnInitializedAsync()
    {
        var t = await SecureStorage.GetAsync("jwt");
        loggedIn = !string.IsNullOrWhiteSpace(t);
        isAdmin = await Auth.IsAdminAsync();
    }

    async Task DoLogout()
    {
        await Auth.LogoutAsync();
        loggedIn = false;
        isAdmin = false;
        Nav.NavigateTo("login", forceLoad: true);
    }
}
