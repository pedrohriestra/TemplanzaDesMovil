@using Microsoft.AspNetCore.Components.Routing
@inject AuthService Auth
@inject NavigationManager Nav

<HeadContent>
    <link rel="stylesheet" href="css/navmenu.css" />
</HeadContent>

<nav class="navbar navbar-dark navbar-expand navbar-bottom">
    <div class="container-fluid justify-content-around">

        <NavLink class="nav-link text-center text-light" href="" Match="NavLinkMatch.All">
            <i class="bi bi-house"></i>
        </NavLink>

        <NavLink class="nav-link text-center text-light" href="blends">
            <i class="bi bi-basket"></i>
        </NavLink>

        <NavLink class="nav-link text-center text-light" href="profile">
            <i class="bi bi-person-badge"></i>
        </NavLink>

        @if (isAdmin)
        {
            <NavLink class="nav-link text-center text-light" href="users">
                <i class="bi bi-people"></i>
            </NavLink>
        }

        @if (loggedIn)
        {
            <button class="btn btn-link nav-link text-center text-light" @onclick="DoLogout">
                <i class="bi bi-box-arrow-right"></i>
            </button>
        }
        else
        {
            <NavLink class="nav-link text-center text-light" href="login">
                <i class="bi bi-person"></i>
            </NavLink>
        }
    </div>
</nav>

@code {
    bool loggedIn;
    bool isAdmin;
    protected override async Task OnInitializedAsync()
    {
        var t = await SecureStorage.GetAsync("jwt");
        loggedIn = !string.IsNullOrWhiteSpace(t);
        isAdmin = await Auth.IsAdminAsync();
    }
    async Task DoLogout()
    {
        await Auth.LogoutAsync();
        loggedIn = false;
        isAdmin = false;
        Nav.NavigateTo("login", forceLoad: true);
    }
}
