@page "/profile"
@inject UsersService UsersSvc
@inject AuthService Auth

<h3>Mi cuenta</h3>

@if (!loggedIn)
{
    <div class="alert alert-warning">
        Debés <a href="login">iniciar sesión</a> para ver tu perfil.
    </div>
}
else if (me is null)
{
    <p>Cargando...</p>
}
else
{
    <div class="row g-2">
        <div class="col-md-4"><input class="form-control" @bind="form.Nombre" placeholder="Nombre" /></div>
        <div class="col-md-4"><input class="form-control" @bind="form.Email" placeholder="Email" /></div>
        <div class="col-md-4"><input class="form-control" @bind="form.ImagenUrl" placeholder="Imagen URL" /></div>
    </div>
    <div class="row g-2 mt-2">
        <div class="col-md-4"><input class="form-control" @bind="form.Password" placeholder="Password (opcional)" /></div>
        <div class="col-md-8 text-end">
            <button class="btn btn-success" @onclick="Save">Guardar cambios</button>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(msg))
    {
        <div class="text-success mt-2">@msg</div>
    }
}

@code {
    bool loggedIn = false;
    UsersService.UserDto? me;
    UsersService.UserUpsertDto form = new();
    string? msg;

    protected override async Task OnInitializedAsync()
    {
        var t = await SecureStorage.GetAsync("jwt");
        loggedIn = !string.IsNullOrWhiteSpace(t);
        if (!loggedIn) return;

        me = await UsersSvc.GetMeAsync();
        if (me is not null)
        {
            form = new()
            {
                Nombre = me.Nombre,
                Email = me.Email,
                ImagenUrl = me.ImagenUrl,
                Rol = me.Rol,
                Activo = me.Activo
            };
        }
    }

    async Task Save()
    {
        msg = null;
        if (await UsersSvc.UpdateMeAsync(form))
            msg = "Guardado ✔";
    }
}
