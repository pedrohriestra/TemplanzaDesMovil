@page "/profile"
@inject UsersService UsersSvc
@inject NavigationManager Nav

<HeadContent>
    <link rel="stylesheet" href="css/profile.css" />
</HeadContent>

<h3>Mi cuenta</h3>

@if (notLogged)
{
    <div class="alert alert-warning">
        Necesitás iniciar sesión para ver tu perfil. <a class="alert-link" href="login">Ir a Login</a>
    </div>
}
else if (me is null)
{
    <p>Cargando...</p>
}
else
{
    <div class="card mb-3">
        <div class="card-body">
            <div class="d-flex align-items-center gap-3 mb-3">
                <img src="@GetImg(form.ImagenUrl)"
                     onerror="this.onerror=null;this.src='images/avatar.png';"
                     class="rounded-circle border profile__avatar" />
                <div>
                    <div class="fw-semibold">@me.Nombre</div>
                    <div class="text-muted profile__email">@me.Email</div>
                </div>
            </div>

            <div class="row g-2">
                <div class="col-md-4"><input class="form-control" @bind="form.Nombre" placeholder="Nombre" /></div>
                <div class="col-md-4"><input class="form-control" @bind="form.Email" placeholder="Email" /></div>
                <div class="col-md-4"><input class="form-control" @bind="form.ImagenUrl" placeholder="Imagen URL (https://i. ... .jpg/png)" /></div>
            </div>

            <div class="row g-2 mt-2">
                <div class="col-md-6"><input class="form-control" @bind="form.Password" placeholder="Password (opcional)" /></div>
                <div class="col-md-6 text-end"><button class="btn btn-success" @onclick="Save">Guardar cambios</button></div>
            </div>

            @if (!string.IsNullOrEmpty(msg))
            {
                <div class="text-success mt-2">@msg</div>
            }
        </div>
    </div>
}

@code {
    UsersService.UserDto? me;
    UsersService.UserUpsertDto form = new();
    string? msg;
    bool notLogged;

    protected override async Task OnInitializedAsync()
    {
        me = await UsersSvc.GetMeAsync();
        if (me is null) { notLogged = true; return; }

        form = new()
        {
            Nombre    = me.Nombre,
            Email     = me.Email,
            Rol       = me.Rol,
            ImagenUrl = me.ImagenUrl,
            Activo    = me.Activo,
            Password  = null
        };
    }

    async Task Save()
    {
        msg = null;
        if (await UsersSvc.UpdateMeAsync(form))
        {
            msg = "Guardado ✔";
            me = await UsersSvc.GetMeAsync();
        }
    }

    string GetImg(string? url)
        => string.IsNullOrWhiteSpace(url) ? "images/avatar.png" : url!;
}
